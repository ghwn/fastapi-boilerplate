name: FastAPI Boilerplate

env:
  SECRET_KEY: 8b6f185c129f95248c3ac446b64851fd677932f22d9cad4dbca961fb8cfa263b
#  AWS_REGION: ap-northeast-2

on:
  push:
    branches:
      - main

jobs:
  continuous-integration:
    runs-on: ubuntu-20.04

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.12
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      # Install dependencies if cache does not exist
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      # Install your root project, if required
      - name: Install library
        run: poetry install --no-interaction

      - name: Lint with Flake8
        run: |
          source .venv/bin/activate
          flake8 ./app --count --select=E9,F63,F7,F82,F401 --show-source --statistics

      - name: Test with Pytest
        run: |
          source .venv/bin/activate
          pytest ./tests


## https://aws.amazon.com/blogs/compute/using-aws-codedeploy-and-aws-codepipeline-to-deploy-applications-to-amazon-lightsail
#
#  continuous-deployment:
#      needs:
#        - continuous-integration
#
#      runs-on: ubuntu-20.04
#
#      steps:
#        - uses: actions/checkout@v2
#
#        - name: Configure AWS credentials
#          uses: aws-actions/configure-aws-credentials@v1
#          with:
#            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#            aws-region: ${{ env.AWS_REGION }}
#
#        - name: Upload to S3
#          run: |
#            aws deploy push \
#              --application-name [Enter application name] \
#              --description "[Enter description]" \
#              --ignore-hidden-files \
#              --s3-location s3://[Enter S3 bucket name]/app.zip \
#              --source .
#
#        - name: Trigger deployment
#          run: |
#            aws deploy create-deployment \
#              --application-name [Enter application name] \
#              --s3-location bucket=[Enter S3 bucket name],key=app.zip,bundleType=zip \
#              --deployment-config-name CodeDeployDefault.OneAtATime \
#              --deployment-group-name [Enter CodeDeploy deployment group name]
